from fastapi import FastAPI, File, UploadFile
import uvicorn
import numpy as np
from io import BytesIO
from PIL import Image
import keras as keras
import tensorflow as tf

MODEL = tf.keras.models.load_model("../model/emotionmodel2")
CLASS_NAMES = ["angry", "disgust", "fear", "happy", "neutral", "sad", "surprised"]
app = FastAPI()

@app.get("/ping")
async def hello():
   return "hola" 

def read_file_as_image(data) -> np.ndarray:
   Image = np.array(Image.open(BytesIO(data)))


@app.post("/predict")
async def predict(
   file: UploadFile = File(...)  
):
   image = read_file_as_image(await file.read())

   img_batch = np.expand_dims(image, 0)    
   
   prediction = MODEL.predict(img_batch)
   
   predcition_class = CLASS_NAMES[np.argmax(prediction[0])]
   confidence = np.max(prediction[0])
   return{
      'class': predcition_class,
      'confidence':float(confidence)
   }
   




if __name__ == "__main__":
   uvicorn.run(app, host="localhost", port=8000)
